apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xcompositeclusters.platform.acme.co
spec:
  compositeTypeRef:
    apiVersion: platform.acme.co/v1alpha1
    kind: XCompositeCluster
  mode: Pipeline
  pipeline:
    - step: compose
      functionRef:
        name: crossplane-contrib-function-kcl
      input:
        apiVersion: krm.kcl.dev/v1alpha1
        kind: KCLRun
        metadata:
          name: compose-cluster
        spec:
          target: Resources
          params:
            name: "input-instance"
          source: |
            oxr = option("params").oxr
            items = [{
                apiVersion: "platform.acme.co/v1alpha1"
                kind: "XCluster"
                metadata.name = "{}-cluster".format(oxr.metadata.name)
                spec.parameters = {
                  initialNodeCount: oxr.spec.parameters.nodeCount
                  networkRef.name: "{}-net".format(oxr.metadata.name)
                  subnetworkRef.name: "{}-subnet".format(oxr.metadata.name)
                  project: "acme-project"
                  location: oxr.spec.parameters.location
                }
              }, {
                apiVersion: "platform.acme.co/v1alpha1"
                kind: "XServiceAccount"
                metadata.name = "{}-sa".format(oxr.metadata.name)
                spec.parameters = {
                  displayName: "{} service account".format(oxr.metadata.name)
                }
              }, {
                apiVersion: "platform.acme.co/v1alpha1"
                kind: "XNodePool"
                metadata.name = "{}-nodepool".format(oxr.metadata.name)
                spec.parameters = {
                  nodeConfig = [{
                    machineType: oxr.spec.parameters.size
                    preemptible: True
                    nodeCount: oxr.spec.parameters.nodeCount
                    serviceAccountRef.name: "{}-sa".format(oxr.metadata.name)
                    clusterRef.name: "{}-cluster".format(oxr.metadata.name)
                  }]
                }
              }, {
                apiVersion: "platform.acme.co/v1alpha1"
                kind: "XNetwork"
                metadata.name = "{}-net".format(oxr.metadata.name)
                spec.parameters = {
                  autoCreateSubnetworks: True
                  routingMode: "GLOBAL"
                }
              }, {
                apiVersion: "platform.acme.co/v1alpha1"
                kind: "XSubnetwork"
                metadata.name = "{}-subnet".format(oxr.metadata.name)
                spec.parameters = {
                  ipCidrRange: "10.2.0.0/16"
                  networkRef.name: "{}-net".format(oxr.metadata.name)
                  region: oxr.spec.parameters.location
                  secondaryIpRange = [{
                    ipCidrRange: "192.168.10.0/24"
                    rangeName: "test-secondary-range-update1"
                  }]
                }
            }]

    - step: automatically-detect-ready-composed-resources
      functionRef:
        name: crossplane-contrib-function-auto-ready
